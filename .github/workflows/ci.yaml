name: Python CI # Continuous Integration

#When to run the workflow: on every push and pull request to the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ] 

jobs: # A workflow run is made up of one or more jobs that can run sequentially or in parallel
  test: # This workflow contains a single job called "test"
    runs-on: ubuntu-latest # The OS for the job to run on

    steps: # A list of steps to be executed as part of the job
    # Step 1: Checkout the code from the repository
    - uses: actions/checkout@v4

    #step 2: Set up Python environment
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    # Step 3: Installs dependencies from requirements.txt file using pip
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    #Step 4: Run tests with unittest
    - name: Run tests
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)/src
        python3 -m unittest discover -s tests

  build-and-push: # This is the NEW JOB we are adding
    needs: test # This ensures this job only runs if the 'test' job succeeds
    runs-on: ubuntu-latest
    # Only build and push on pushes to main (not pull requests)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/my-python-ci-app:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/my-python-ci-app:${{ github.sha }}
